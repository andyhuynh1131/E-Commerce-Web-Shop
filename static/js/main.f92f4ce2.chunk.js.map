{"version":3,"sources":["components/firebase/config.js","Context/AuthProvider.js","components/Chatroom/InfoUser.js","hooks/useFirestore.js","Context/AppProvider.js","components/Chatroom/ListMessage.js","components/Chatroom/SideBar.js","components/Chatroom/Message.js","components/firebase/service.js","components/Chatroom/ChatWindow.js","components/Chatroom/index.js","components/Login/index.js","components/Modal/AddRoomModal.js","components/Modal/InviteMember.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","AuthContext","React","createContext","AuthProvider","children","history","useHistory","useState","user","setUser","isloading","setIsloading","useEffect","unsubccibed","onAuthStateChanged","displayName","email","uid","photoURL","push","Provider","value","Infostyled","styled","div","InfoUser","useContext","src","charAt","toUpperCase","Text","className","ghost","onClick","signOut","useFirestore","collection","condition","documents","setDocuments","collectionRef","orderBy","compareValue","length","where","fieldName","operator","onSnapshot","snapshot","docs","map","doc","data","id","AppContext","AppProvider","isInviteMember","setIsInviteMember","members","setMembers","selectedRoomId","setSelectedRoomId","isAddRoomVisible","setIsAddRoomVisible","roomscondition","useMemo","rooms","selectedRoom","find","room","Panel","Collapse","PanelStyled","ListMessageStyled","Typography","Link","ListMessage","state","setState","defaultActiveKey","header","name","type","icon","PlusSquareOutlined","SideBarstyled","SideBar","span","WrapperStyled","formatDate","seconds","formatRelative","Date","slice","Message","text","createdAt","size","addDocument","add","FieldValue","serverTimestamp","generateKeywords","split","filter","word","flagArray","result","stringArray","i","findPermutation","k","join","reduce","acc","cur","words","arrName","curName","forEach","letter","createKeywords","HeaderStyled","ButtonGroupStyled","ListmessageStyled","Wrapper","ContentStyled","FormStyled","Form","ChatWindow","inputValue","setInputValue","useForm","form","handelSendMessage","roomId","resetFields","sort","a","b","desription","UserAddOutlined","Group","maxCount","member","title","message","Item","style","width","onChange","e","target","onPressEnter","placeholder","bordered","autoComplete","showIcon","margin","closable","Chatroom","Title","fbProvider","FacebookAuthProvider","Login","handleFBlogin","signInWithPopup","additionalUserInfo","isNewUser","providerId","keywords","justify","height","textAlign","marginBottom","Level","AddRoomModal","visible","onOk","console","log","getFieldsValue","onCancel","layout","label","TextArea","DebounceSelect","fecthOptions","debounceTimeout","props","fetching","setFetching","options","setOptions","debounceFetcher","debounce","then","newOptions","labelInValue","onSearch","filterOption","notFoundContent","option","Option","chatAt","fetchUserList","search","limit","get","lable","InviteMember","setValue","update","val","mode","newValue","App","component","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f92f4ce2.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/analytics'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDUXQuAqC5fXdM4pzje076Nyy-wd6QH0ik\",\r\n    authDomain: \"chat-app-3a7ef.firebaseapp.com\",\r\n    projectId: \"chat-app-3a7ef\",\r\n    storageBucket: \"chat-app-3a7ef.appspot.com\",\r\n    messagingSenderId: \"648368662085\",\r\n    appId: \"1:648368662085:web:cff6dcef3db92a838fe52c\",\r\n    measurementId: \"G-D5FC2QRB3J\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\n\r\nexport { auth, db };\r\nexport default firebase;\r\n","\r\nimport { Spin } from 'antd'\r\nimport { useHistory } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport { auth } from '../components/firebase/config'\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nfunction AuthProvider({ children }) {\r\n    const history = useHistory()\r\n    const [user, setUser] = useState({})\r\n    const [isloading, setIsloading] = useState(true)\r\n\r\n\r\n    React.useEffect(() => {\r\n        const unsubccibed = auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                const { displayName, email, uid, photoURL } = user\r\n                setUser({\r\n                    displayName, email, uid, photoURL\r\n                })\r\n                setIsloading(false)\r\n                history.push('/')\r\n                return;\r\n            }\r\n            setIsloading(false)\r\n            history.push('/login')\r\n\r\n        });\r\n\r\n        return () => {\r\n            unsubccibed();\r\n        }\r\n    }, [history])\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user }}>\r\n            {isloading ? <Spin /> : children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthProvider;","import React, { useContext, useEffect } from 'react';\r\nimport { Button, Avatar, Typography } from 'antd'\r\nimport styled from 'styled-components'\r\nimport { auth, db } from '../firebase/config';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\n\r\nconst Infostyled = styled.div`\r\n    display:flex;\r\n    justify-content: space-between;\r\n    padding:12px 16px;\r\n    border-bottom: 1px solid rgba(82,38,83);\r\n\r\n    .username{\r\n        color:white;\r\n        margin-left:5px\r\n    }\r\n\r\n\r\n\r\n`\r\n\r\nfunction InfoUser() {\r\n    // useEffect(() => {\r\n    //     db.collection('users').onSnapshot((snapshot) => {\r\n    //         const data = snapshot.docs.map(doc => ({\r\n    //             ...doc.data(),\r\n    //             id: doc.id\r\n    //         }))\r\n\r\n\r\n\r\n    //         console.log({ data, snapshot, docs: snapshot.docs });\r\n    //     })\r\n    // }, [])\r\n\r\n    const { user: {\r\n        displayName,\r\n        photoURL\r\n    } } = useContext(AuthContext)\r\n\r\n    return (\r\n        <Infostyled>\r\n            <div>\r\n                <Avatar src={photoURL}>{photoURL ? '' : displayName?.charAt(0)?.toUpperCase()}</Avatar>\r\n                <Typography.Text className='username'>{displayName}</Typography.Text>\r\n            </div>\r\n            <Button ghost onClick={() => { auth.signOut() }}>Đăng xuất</Button>\r\n        </Infostyled>\r\n    );\r\n}\r\n\r\nexport default InfoUser;","import React, { useState } from \"react\"\r\nimport { db } from '../components/firebase/config'\r\n\r\n\r\nconst useFirestore = (collection, condition) => {\r\n    const [documents, setDocuments] = useState([])\r\n\r\n    React.useEffect(() => {\r\n        let collectionRef = db.collection(collection).orderBy('createdAt');\r\n\r\n        if (condition) {\r\n\r\n            if (!condition.compareValue || !condition.compareValue.length) {\r\n\r\n\r\n                return;\r\n            }\r\n\r\n            collectionRef.where(\r\n                condition.fieldName,\r\n                condition.operator,\r\n                condition.compareValue)\r\n\r\n\r\n        }\r\n\r\n        const unsubccibed = collectionRef.onSnapshot((snapshot) => {\r\n            const documents = snapshot.docs.map((doc) => ({\r\n                ...doc.data(),\r\n                id: doc.id\r\n            }))\r\n            setDocuments(documents)\r\n\r\n        })\r\n\r\n        return unsubccibed;\r\n\r\n    }, [collection, condition])\r\n\r\n    return documents;\r\n}\r\n\r\n\r\nexport default useFirestore;","import { AuthContext } from './AuthProvider';\r\nimport React, { useState, useMemo, useContext, useEffect } from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { db } from '../components/firebase/config'\r\n\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nfunction AppProvider({ children }) {\r\n    const [isInviteMember, setIsInviteMember] = useState(false)\r\n\r\n    const [members, setMembers] = useState([])\r\n\r\n    const [selectedRoomId, setSelectedRoomId] = useState('')\r\n\r\n    const [isAddRoomVisible, setIsAddRoomVisible] = useState(false)\r\n\r\n    const { user: { uid } } = useContext(AuthContext)\r\n\r\n    const roomscondition = React.useMemo(() => {\r\n        return {\r\n            fieldName: 'members',\r\n            operator: 'array-contains',\r\n            compareValue: uid\r\n        }\r\n    }, [uid])\r\n\r\n    const rooms = useFirestore('rooms', roomscondition)\r\n\r\n\r\n    const selectedRoom = React.useMemo(\r\n        () => rooms.find((room) => room.id === selectedRoomId) || {}\r\n\r\n        , [rooms, selectedRoomId])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!selectedRoom.members) {\r\n            return;\r\n        }\r\n        let collectionRef = db.collection('users').where('uid', 'in', selectedRoom.members)\r\n        const unsubccibed = collectionRef.onSnapshot((snapshot) => {\r\n            const documents = snapshot.docs.map((doc) => ({\r\n                ...doc.data(),\r\n                id: doc.id\r\n            }))\r\n\r\n            setMembers(documents)\r\n        })\r\n\r\n        return unsubccibed;\r\n\r\n    }, [selectedRoom.members])\r\n\r\n\r\n\r\n    return (\r\n        <AppContext.Provider value={{\r\n            rooms, members, selectedRoom, isAddRoomVisible,\r\n            setIsAddRoomVisible, selectedRoomId, setSelectedRoomId,\r\n            isInviteMember, setIsInviteMember\r\n        }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AppProvider;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, Collapse, Typography } from 'antd'\r\nimport styled from 'styled-components';\r\nimport { PlusSquareOutlined } from '@ant-design/icons'\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport { db } from '../firebase/config'\r\n\r\n\r\nconst { Panel } = Collapse\r\n\r\n\r\n\r\nconst PanelStyled = styled(Panel)`\r\n    &&&{\r\n        .ant-collapse-header,\r\n        p{\r\n            color:white;\r\n        }\r\n        .ant-collapse-content-box{\r\n            padding :0 40px;\r\n        }\r\n\r\n        .add-room{\r\n            color:white;\r\n            padding:0;\r\n        }\r\n\r\n    }\r\n`\r\n\r\nconst ListMessageStyled = styled(Typography.Link)`\r\n    display:block;\r\n    margin-bottom:5px;\r\n    color:white\r\n\r\n`\r\n\r\nfunction ListMessage() {\r\n    const { rooms, setIsAddRoomVisible, setSelectedRoomId } = useContext(AppContext)\r\n\r\n    const { user: { uid } } = useContext(AuthContext)\r\n\r\n    const [state, setState] = useState([])\r\n\r\n\r\n\r\n    const handleAddroom = () => {\r\n        setIsAddRoomVisible(true)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let collectionRef = db.collection('rooms').where('members', 'array-contains', uid)\r\n        const unsubccibed = collectionRef.onSnapshot((snapshot) => {\r\n            const documents = snapshot.docs.map((doc) => ({\r\n                ...doc.data(),\r\n                id: doc.id\r\n            }))\r\n\r\n            setState(documents)\r\n        })\r\n\r\n        return unsubccibed;\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Collapse ghost defaultActiveKey={['1']}>\r\n            <PanelStyled header='Danh sách các cuộc trò chuyện' key='1'>\r\n                {\r\n                    state.map((room) => {\r\n                        return <ListMessageStyled key={room.id} onClick={() => setSelectedRoomId(room.id)}\r\n\r\n                        >{room.name}</ListMessageStyled>\r\n                    })\r\n                }\r\n\r\n                <Button type=\"text\" icon={<PlusSquareOutlined />} className=\"add-room\" onClick={handleAddroom}>Tạo Phòng</Button>\r\n            </PanelStyled>\r\n        </Collapse>\r\n    );\r\n}\r\n\r\nexport default ListMessage;","import React from 'react';\r\nimport { Row, Col } from 'antd'\r\nimport InfoUser from './InfoUser';\r\nimport ListMessage from './ListMessage';\r\nimport styled from 'styled-components'\r\n\r\nconst SideBarstyled = styled.div`\r\n    background: #3f0e40;\r\n    color : white;\r\n    height: 100vh;\r\n`\r\n\r\n\r\nfunction SideBar() {\r\n    return (\r\n        <SideBarstyled>\r\n            <Row>\r\n                <Col span={24}><InfoUser /></Col>\r\n                <Col span={24}><ListMessage /></Col>\r\n            </Row>\r\n        </SideBarstyled>\r\n    );\r\n}\r\n\r\nexport default SideBar;","import { Avatar, Typography } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { formatRelative } from 'date-fns'\r\n\r\n\r\nconst WrapperStyled = styled.div`\r\n    margin-bottom:10px;\r\n\r\n    .author{\r\n        margin-left:5px;\r\n        font-weight:bold;\r\n\r\n    }\r\n\r\n    .date{\r\n        margin-left:10px;\r\n        font-size:11px;\r\n        color:#a7a7a7\r\n\r\n    }\r\n\r\n    .content{\r\n        margin-left:30px;\r\n    }\r\n\r\n`\r\n\r\nfunction formatDate(seconds) {\r\n    let formatDate = ''\r\n    if (seconds) {\r\n        formatDate = formatRelative(new Date(seconds * 1000), new Date())\r\n\r\n        formatDate = formatDate.charAt(0).toUpperCase() + formatDate.slice(1)\r\n\r\n    }\r\n    return formatDate;\r\n\r\n}\r\n\r\n\r\nfunction Message({ text, displayName, createdAt, photoURL }) {\r\n    return (\r\n        <WrapperStyled>\r\n            <div>\r\n                <Avatar size='small' src={photoURL}>{photoURL ? '' : displayName.charAt(0)?.toUpperCase()}</Avatar>\r\n                <Typography.Text className=\"author\">{displayName}</Typography.Text>\r\n                <Typography.Text className=\"date\">{formatDate(createdAt?.seconds)}</Typography.Text>\r\n            </div>\r\n            <div>\r\n                <Typography.Text className=\"content\">{text}</Typography.Text>\r\n            </div>\r\n        </WrapperStyled>\r\n    );\r\n}\r\n\r\nexport default Message;","import firebase, { db } from './config'\r\n\r\nexport const addDocument = (collection, data) => {\r\n    const query = db.collection(collection)\r\n\r\n    query.add({\r\n        ...data,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n    })\r\n}\r\nexport const generateKeywords = (displayName) => {\r\n    // liet ke tat cac hoan vi. vd: name = [\"David\", \"Van\", \"Teo\"]\r\n    // => [\"David\", \"Van\", \"Teo\"], [\"David\", \"Teo\", \"Van\"], [\"Teo\", \"David\", \"Van\"],...\r\n    const name = displayName.split(' ').filter((word) => word);\r\n\r\n    const length = name.length;\r\n    let flagArray = [];\r\n    let result = [];\r\n    let stringArray = [];\r\n\r\n    /**\r\n     * khoi tao mang flag false\r\n     * dung de danh dau xem gia tri\r\n     * tai vi tri nay da duoc su dung\r\n     * hay chua\r\n     **/\r\n    for (let i = 0; i < length; i++) {\r\n        flagArray[i] = false;\r\n    }\r\n\r\n    const createKeywords = (name) => {\r\n        const arrName = [];\r\n        let curName = '';\r\n        name.split('').forEach((letter) => {\r\n            curName += letter;\r\n            arrName.push(curName);\r\n        });\r\n        return arrName;\r\n    };\r\n\r\n    function findPermutation(k) {\r\n        for (let i = 0; i < length; i++) {\r\n            if (!flagArray[i]) {\r\n                flagArray[i] = true;\r\n                result[k] = name[i];\r\n\r\n                if (k === length - 1) {\r\n                    stringArray.push(result.join(' '));\r\n                }\r\n\r\n                findPermutation(k + 1);\r\n                flagArray[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    findPermutation(0);\r\n\r\n    const keywords = stringArray.reduce((acc, cur) => {\r\n        const words = createKeywords(cur);\r\n        return [...acc, ...words];\r\n    }, []);\r\n\r\n    return keywords;\r\n};","\r\nimport styled from 'styled-components'\r\nimport { UserAddOutlined } from '@ant-design/icons'\r\nimport { Button, Tooltip, Avatar, Form, Input, Alert, message } from 'antd';\r\nimport Message from './Message';\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { AppContext } from \"../../Context/AppProvider\";\r\nimport { addDocument } from '../firebase/service'\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport { db } from '../firebase/config'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst HeaderStyled = styled.div`\r\n    display:flex;\r\n    justify-content: space-between;\r\n    height:56px;\r\n    padding:0 16px;\r\n    align-items:center;\r\n    border-bottom:1px solid rgb(230,230,230);\r\n\r\n\r\n    .header{\r\n        &-info{\r\n            display:flex;\r\n            flex-direction:column;\r\n            justify-content:center;\r\n\r\n        }\r\n\r\n        &-title{\r\n           margin:0;\r\n           font-weight:bold;\r\n            \r\n        }\r\n\r\n        &-desription{\r\n           font-size:12px;\r\n            \r\n        }\r\n    }\r\n\r\n`\r\nconst ButtonGroupStyled = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n\r\n`\r\nconst ListmessageStyled = styled.div`\r\n        max-height:100%;\r\n        overflow-y:auto;\r\n\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n    height:100vh\r\n`\r\nconst ContentStyled = styled.div`\r\n    height:calc(100% - 56px);\r\n    display:flex;\r\n    flex-direction:column;\r\n    padding:11px;\r\n    justify-content:flex-end;\r\n`\r\nconst FormStyled = styled(Form)`\r\n    display:flex;\r\n    align-items: center;\r\n    padding : 2px 2px 2px 0;\r\n    border: 1px solid rgb(230,230,230);\r\n    border-radius:3px;\r\n    height:60px;\r\n\r\n    ant-form-item{\r\n        margin-bottom:0;\r\n        flex:1;\r\n    }\r\n\r\n`\r\n\r\n\r\nfunction ChatWindow() {\r\n    const [state, setState] = useState([])\r\n    const { user: { uid, photoURL, displayName } } = useContext(AuthContext)\r\n    const { selectedRoom, setIsInviteMember, members } = useContext(AppContext)\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [form] = Form.useForm()\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue(e.target.value)\r\n\r\n    }\r\n\r\n\r\n    const handelSendMessage = () => {\r\n        addDocument('messages', {\r\n\r\n            text: inputValue,\r\n            uid,\r\n            photoURL,\r\n            roomId: selectedRoom.id,\r\n            displayName\r\n        })\r\n\r\n        form.resetFields(['message'])\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!selectedRoom.id) {\r\n            return;\r\n        }\r\n        let message = db.collection('messages').where('roomId', \"==\", selectedRoom.id)\r\n        const unsubccibed = message.onSnapshot((snapshot) => {\r\n            const documents = snapshot.docs.map((doc) => ({\r\n                ...doc.data(),\r\n                id: doc.id\r\n            }))\r\n            documents.sort((a, b) => { return a.createdAt - b.createdAt })\r\n            setState(documents)\r\n\r\n        })\r\n\r\n        return unsubccibed\r\n    }, [selectedRoom.id])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n            {\r\n                selectedRoom.id ? (\r\n                    <>\r\n                        <HeaderStyled>\r\n                            <div className=\"header-info\">\r\n\r\n                                <p className=\"header-title\">{selectedRoom.name}</p>\r\n                                <span className=\"header-desription\">{selectedRoom.desription}</span>\r\n                            </div>\r\n                            <div>\r\n                                <ButtonGroupStyled>\r\n                                    <Button icon={<UserAddOutlined />} onClick={() => setIsInviteMember(true)}>Mời</Button>\r\n                                    <Avatar.Group size='small' maxCount={2}>\r\n                                        {\r\n                                            members.map(member =>\r\n                                                <Tooltip title={member.displayName}>\r\n                                                    <Avatar src={member.photoURL} key={member.id}></Avatar>\r\n                                                </Tooltip>)\r\n\r\n                                        }\r\n                                    </Avatar.Group>\r\n                                </ButtonGroupStyled>\r\n                            </div>\r\n\r\n                        </HeaderStyled>\r\n\r\n                        <ContentStyled>\r\n                            <ListmessageStyled>\r\n                                {\r\n                                    state.map(message => <Message key={message.id} text={message.text} photoURL={message.photoURL}\r\n                                        createdAt={message.createdAt} displayName={message.displayName}\r\n\r\n                                    />)\r\n                                }\r\n\r\n\r\n                            </ListmessageStyled>\r\n                            <FormStyled form={form}>\r\n                                <Form.Item name=\"message\" style={{ width: '100%' }}>\r\n                                    <Input onChange={handleInputChange} onPressEnter={handelSendMessage} placeholder=\"Nhập tin nhắn  . . .\" bordered={false} autoComplete=\"off\" />\r\n                                </Form.Item>\r\n                                <Button type=\"primary\" onClick={handelSendMessage}>Gửi</Button>\r\n\r\n                            </FormStyled>\r\n\r\n                        </ContentStyled>\r\n                    </>\r\n                ) : <Alert message=\"Hãy chọn phòng\" type=\"info\" showIcon style={{ margin: 5 }} closable />\r\n            }\r\n\r\n        </Wrapper >\r\n    );\r\n}\r\n\r\nexport default ChatWindow;","import React from 'react';\r\nimport SideBar from './SideBar';\r\nimport ChatWindow from './ChatWindow'\r\nimport { Row, Col } from 'antd'\r\n\r\nfunction Chatroom() {\r\n    return (\r\n        <Row>\r\n            <Col span={6}><SideBar /></Col>\r\n            <Col span={18}><ChatWindow /></Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Chatroom;","import React from 'react';\r\nimport { Row, Col, Button, Typography } from 'antd'\r\nimport firebase, { auth, db } from '../firebase/config'\r\nimport { addDocument, generateKeywords } from '../firebase/service';\r\n\r\n\r\n\r\nconst { Title } = Typography\r\n\r\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\n\r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n\r\n    const handleFBlogin = async () => {\r\n\r\n        const { additionalUserInfo, user } = await auth.signInWithPopup(fbProvider)\r\n        if (additionalUserInfo?.isNewUser) {\r\n            addDocument('users', {\r\n                displayName: user.displayName,\r\n                email: user.email,\r\n                photoURL: user.photoURL,\r\n                uid: user.uid,\r\n                providerId: additionalUserInfo.providerId,\r\n                keywords: generateKeywords(user.displayName)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row justify=\"center\" style={{ height: 800 }}>\r\n                <Col span={8}>\r\n                    <Title style={{ textAlign: \"center\", marginBottom: 10 }} Level={3}>\r\n                        App Chat\r\n                    </Title>\r\n                    <Button style={{ marginBottom: 5, width: '100%' }}>Đăng nhập bằng GooGle</Button>\r\n                    <Button onClick={handleFBlogin} style={{ width: '100%' }}>Đăng nhập bằng FaceBook</Button>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useContext, useState } from 'react';\r\nimport { Modal, Form, Input } from 'antd'\r\nimport { AppContext } from '../../Context/AppProvider'\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport { addDocument } from '../firebase/service';\r\n\r\n\r\nfunction AddRoomModal() {\r\n\r\n    const { isAddRoomVisible, setIsAddRoomVisible } = useContext(AppContext)\r\n    const { user: { uid } } = useContext(AuthContext)\r\n\r\n\r\n    const [form] = Form.useForm()\r\n\r\n    const handleOk = () => {\r\n        console.log(form.getFieldsValue());\r\n        addDocument('rooms', { ...form.getFieldsValue(), members: [uid] })\r\n\r\n        setIsAddRoomVisible(false)\r\n        form.resetFields()\r\n\r\n    }\r\n\r\n\r\n    const handelCancel = () => {\r\n        setIsAddRoomVisible(false)\r\n        form.resetFields()\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                title=\"Tạo phòng\"\r\n                visible={isAddRoomVisible}\r\n                onOk={handleOk}\r\n                onCancel={handelCancel}\r\n            >\r\n                <Form form={form} layout=\"vertical\">\r\n                    <Form.Item label=\"Tên phòng :\" name=\"name\">\r\n                        <Input placeholder=\"Nhập tên phòng ...\" />\r\n\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Mô tả :\" name=\"desription\">\r\n                        <Input.TextArea placeholder=\"Mô tả ...\" />\r\n\r\n                    </Form.Item>\r\n\r\n\r\n                </Form>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddRoomModal;","import React, { useContext, useMemo, useState } from 'react';\r\nimport { Modal, Form, Select, Spin } from 'antd'\r\nimport { AppContext } from '../../Context/AppProvider'\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport { addDocument } from '../firebase/service';\r\nimport { debounce } from 'lodash'\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport { db } from '../firebase/config';\r\n\r\n\r\n\r\nfunction DebounceSelect({ fecthOptions, debounceTimeout = 300, ...props }) {\r\n\r\n    const [fetching, setFetching] = useState(false)\r\n\r\n    const [options, setOptions] = useState([])\r\n\r\n    const debounceFetcher = useMemo(() => {\r\n        const loadOptions = (value) => {\r\n            setOptions([])\r\n            setFetching(true)\r\n\r\n            fecthOptions(value).then(newOptions => {\r\n                setOptions(newOptions)\r\n                setFetching(false)\r\n            })\r\n        }\r\n\r\n        return debounce(loadOptions, debounceTimeout)\r\n    }, [debounceTimeout, fecthOptions])\r\n\r\n    return (\r\n        <Select labelInValue onSearch={debounceFetcher}\r\n            filterOption={false}\r\n            notFoundContent={fetching ? <Spin size='small' /> : null}\r\n            {...props}\r\n        >\r\n            {\r\n                options.map((option) => {\r\n                    return <Select.Option key={option.value} value={option.value} title={option.label}>\r\n                        <Avatar size='small' src={option.photoURL}></Avatar>\r\n                        {\r\n                            option.photoURL ? '' : option.label?.chatAt(0).toUpperCase()\r\n                        }\r\n                        {`${option.label}`}\r\n                    </Select.Option>\r\n                })\r\n            }\r\n\r\n\r\n        </Select>\r\n    )\r\n}\r\n\r\n\r\nasync function fetchUserList(search) {\r\n    return db.collection('users').where('keywords', 'array-contains', search).orderBy('displayName').limit(20).get()\r\n        .then(snapshot => {\r\n            return snapshot.docs.map(doc => ({\r\n                lable: doc.data().displayName,\r\n                value: doc.data().uid,\r\n                photoURL: doc.data().photoURL\r\n            }))\r\n        })\r\n}\r\n\r\n\r\n\r\nfunction InviteMember() {\r\n    const [value, setValue] = useState('')\r\n\r\n    const { isInviteMember, setIsInviteMember, selectedRoomId, selectedRoom } = useContext(AppContext)\r\n\r\n    const [form] = Form.useForm()\r\n\r\n    const handleOk = () => {\r\n\r\n        setIsInviteMember(false)\r\n        form.resetFields()\r\n\r\n        const roomRef = db.collection('rooms').docs(selectedRoomId)\r\n\r\n        roomRef.update({ ...selectedRoom.members, ...value.map(val => val.value) })\r\n\r\n        console.log(value);\r\n\r\n    }\r\n\r\n\r\n    const handelCancel = () => {\r\n        setIsInviteMember(false)\r\n        form.resetFields()\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                title=\"Mời thành viên\"\r\n                visible={isInviteMember}\r\n                onOk={handleOk}\r\n                onCancel={handelCancel}\r\n            >\r\n                <Form >\r\n                    <DebounceSelect\r\n                        mode=\"multiple\"\r\n                        label=\"Tên các thành viên\"\r\n                        value={value}\r\n                        fecthOptions={fetchUserList}\r\n                        onChange={newValue => { setValue(newValue) }}\r\n                        style={{ width: '100%' }}\r\n                    >\r\n\r\n\r\n                    </DebounceSelect>\r\n\r\n\r\n                </Form>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InviteMember;","import Chatroom from './components/Chatroom';\nimport './App.css';\nimport Login from './components/Login';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\nimport AuthProvider from './Context/AuthProvider';\nimport AppProvider from './Context/AppProvider'\nimport AddRoomModal from './components/Modal/AddRoomModal';\nimport InviteMember from './components/Modal/InviteMember';\n\nfunction App() {\n  return (\n\n    <BrowserRouter>\n      <AuthProvider>\n        <AppProvider>\n          <Switch>\n            <Route component={Login} exact path='/login' />\n\n            <Route component={Chatroom} exact path='/' />\n          </Switch>\n          <AddRoomModal />\n          <InviteMember />\n        </AppProvider>\n      </AuthProvider>\n    </BrowserRouter>\n\n\n\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}